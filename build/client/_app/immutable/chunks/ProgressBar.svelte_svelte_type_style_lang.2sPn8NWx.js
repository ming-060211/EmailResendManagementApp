import{a as I,t as Q}from"./index.4z0MrnWu.js";import{v as T,F as V,G as j,E as D}from"./scheduler.hcFPtB4K.js";import{w as C,r as F}from"./entry.9FwAuDwT.js";function q(e){return(e==null?void 0:e.length)!==void 0?e:Array.from(e)}function G(e,s){Q(e,1,1,()=>{s.delete(e.key)})}function B(e,s){e.f(),G(e,s)}function H(e,s,n,o,f,g,i,w,m,d,u,S){let r=e.length,h=g.length,l=r;const v={};for(;l--;)v[e[l].key]=l;const M=[],_=new Map,E=new Map,z=[];for(l=h;l--;){const t=S(f,g,l),a=n(t);let c=i.get(a);c?o&&z.push(()=>c.p(t,s)):(c=d(a,t),c.c()),_.set(a,M[l]=c),a in v&&E.set(a,Math.abs(l-v[a]))}const x=new Set,O=new Set;function y(t){I(t,1),t.m(w,u),i.set(t.key,t),u=t.first,h--}for(;r&&h;){const t=M[h-1],a=e[r-1],c=t.key,p=a.key;t===a?(u=t.first,r--,h--):_.has(p)?!i.has(c)||x.has(c)?y(t):O.has(p)?r--:E.get(c)>E.get(p)?(O.add(c),y(t)):(x.add(p),r--):(m(a,i),r--)}for(;r--;){const t=e[r];_.has(t.key)||m(t,i)}for(;h;)y(M[h-1]);return T(z),M}const P="modalStore";function W(){const e=V(P);if(!e)throw new Error("modalStore is not initialized. Please ensure that `initializeStores()` is invoked in the root layout file of this app!");return e}function X(){const e=J();return j(P,e)}function J(){const{subscribe:e,set:s,update:n}=C([]);return{subscribe:e,set:s,update:n,trigger:o=>n(f=>(f.push(o),f)),close:()=>n(o=>(o.length>0&&o.shift(),o)),clear:()=>s([])}}const L={};function R(e){return e==="local"?localStorage:sessionStorage}function b(e,s,n){const o=(n==null?void 0:n.serializer)??JSON,f=(n==null?void 0:n.storage)??"local";function g(i,w){R(f).setItem(i,o.stringify(w))}if(!L[e]){const i=C(s,d=>{const u=R(f).getItem(e);u&&d(o.parse(u));{const S=r=>{r.key===e&&d(r.newValue?o.parse(r.newValue):null)};return window.addEventListener("storage",S),()=>window.removeEventListener("storage",S)}}),{subscribe:w,set:m}=i;L[e]={set(d){g(e,d),m(d)},update(d){const u=d(D(i));g(e,u),m(u)},subscribe:w}}return L[e]}b("modeOsPrefers",!1);b("modeUserPrefers",void 0);b("modeCurrent",!1);const A="(prefers-reduced-motion: reduce)";function K(){return window.matchMedia(A).matches}const Z=F(K(),e=>{{const s=o=>{e(o.matches)},n=window.matchMedia(A);return n.addEventListener("change",s),()=>{n.removeEventListener("change",s)}}});export{q as e,B as f,W as g,X as i,Z as p,H as u};
